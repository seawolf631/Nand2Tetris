// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux4Way(in=load,sel=address[0..1],a=y0,b=y1,c=y2,d=y3);
	RAM4K(in=in,load=y0,address=address[2..13],out=x0);
	RAM4K(in=in,load=y1,address=address[2..13],out=x1);
	RAM4K(in=in,load=y2,address=address[2..13],out=x2);
	RAM4K(in=in,load=y3,address=address[2..13],out=x3);
	Mux4Way16(a=x0,b=x1,c=x2,d=x3,sel=address[0..1],out=out);
}
