// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address[0..2],a=y0,b=y1,c=y2,d=y3,e=y4,f=y5,g=y6,h=y7);
	RAM512(in=in,load=y0,address=address[3..11],out=x0);
	RAM512(in=in,load=y1,address=address[3..11],out=x1);
	RAM512(in=in,load=y2,address=address[3..11],out=x2);
	RAM512(in=in,load=y3,address=address[3..11],out=x3);
	RAM512(in=in,load=y4,address=address[3..11],out=x4);
	RAM512(in=in,load=y5,address=address[3..11],out=x5);
	RAM512(in=in,load=y6,address=address[3..11],out=x6);
	RAM512(in=in,load=y7,address=address[3..11],out=x7);
	Mux8Way16(a=x0,b=x1,c=x2,d=x3,e=x4,f=x5,g=x6,h=x7,sel=address[0..2],out=out);
}
