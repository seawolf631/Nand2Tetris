//Pushing with Argument
@1

D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Popping with Pointer
@SP
M=M-1
A=M
D=M
@4
M=D
//Pushing
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Popping with That
@0  
D=A
@THAT
A=M
D=D+A
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THAT
A=M
M=D
@0  
D=A
@THAT
A=M
D=A-D
@THAT
M=D
//Pushing
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Popping with That
@1  
D=A
@THAT
A=M
D=D+A
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THAT
A=M
M=D
@1  
D=A
@THAT
A=M
D=A-D
@THAT
M=D
//Pushing with Argument
@0

D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pushing
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//Subtracting
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//Popping with Argument
@0  
D=A
@ARG
A=M
D=D+A
@ARG
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@0  
D=A
@ARG
A=M
D=A-D
@ARG
M=D
//Labeling
(MAIN_LOOP_START)
//Pushing with Argument
@0

D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Writing IF-GOTO
@SP
M=M-1
A=M
D=M
@COMPUTE_ELEMENT // if num_of_elements > 0, goto COMPUTE_ELEMENT
D;JNE
//Writing GOTO
@END_PROGRAM        // otherwise, goto END_PROGRAM
0;JMP
//Labeling
(COMPUTE_ELEMENT)
//Pushing with That
@0

D=A
@THAT
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pushing with That
@1

D=A
@THAT
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Adding
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
A=M
M=M+D
@SP
M=M+1
//Popping with That
@2  
D=A
@THAT
A=M
D=D+A
@THAT
M=D
@SP
M=M-1
A=M
D=M
@THAT
A=M
M=D
@2  
D=A
@THAT
A=M
D=A-D
@THAT
M=D
//Pushing with Pointer
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pushing
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Adding
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
A=M
M=M+D
@SP
M=M+1
//Popping with Pointer
@SP
M=M-1
A=M
D=M
@4
M=D
//Pushing with Argument
@0

D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1
//Pushing
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Subtracting
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
//Popping with Argument
@0  
D=A
@ARG
A=M
D=D+A
@ARG
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@0  
D=A
@ARG
A=M
D=A-D
@ARG
M=D
//Writing GOTO
@MAIN_LOOP_START
0;JMP
//Labeling
(END_PROGRAM)
